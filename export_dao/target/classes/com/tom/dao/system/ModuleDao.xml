<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tom.dao.system.ModuleDao">
    <resultMap id="BaseResultMap" type="com.tom.domain.system.Module">
        <id column="module_id" property="id" />
        <result column="parent_id" property="parentId" />
        <result column="parent_name" property="parentName" />
        <result column="name" property="name" />
        <result column="layer_num" property="layerNum" />
        <result column="is_leaf" property="isLeaf" />
        <result column="ico" property="ico" />
        <result column="cpermission" property="cpermission" />
        <result column="curl" property="curl" />
        <result column="ctype" property="ctype" />
        <result column="state" property="state" />
        <result column="belong" property="belong" />
        <result column="cwhich" property="cwhich" />
        <result column="quote_num" property="quoteNum" />
        <result column="remark" property="remark" />
        <result column="order_no"  property="orderNo" />
    </resultMap>

    <!--查询全部模块列表-->
    <select id="findAll" resultMap="BaseResultMap">
        select * from ss_module order by order_no asc
    </select>

    <!--根据id查询-->
    <select id="findById" parameterType="java.lang.String" resultMap="BaseResultMap">
        select * from ss_module where module_id = #{id}
    </select>

    <!--删除-->
    <delete id="delete" parameterType="java.lang.String">
        delete from ss_module where module_id = #{id}
    </delete>

    <!--保存-->
    <insert id="save" parameterType="com.tom.domain.system.Module">
        insert into ss_module (module_id, parent_id, parent_name, name, layer_num, is_leaf,
        ico, cpermission, curl, ctype, state, belong, cwhich, quote_num,
        remark, order_no)
        values (#{id}, #{parentId}, #{parentName}, #{name}, #{layerNum}, #{isLeaf},
        #{ico}, #{cpermission}, #{curl}, #{ctype}, #{state}, #{belong}, #{cwhich}, #{quoteNum},
        #{remark}, #{orderNo})
    </insert>

    <!--更新-->
    <update id="update" parameterType="Module">
        update ss_module
        <set>
            <if test="parentId!=null and parentId!=''">
                parent_id = #{parentId} ,
            </if>
            <if test="parentName!=null and parentName!=''">
                parent_name= #{parentName} ,
            </if>
            <if test="name!=null and name!=''">
                name = #{name} ,
            </if>
            <if test="layerNum!=null and layerNum!=''">
                layer_num = #{layerNum} ,
            </if>
            <if test="isLeaf!=null and isLeaf!=''">
                is_leaf = #{isLeaf} ,
            </if>
            <if test="ico!=null and ico!=''">
                ico = #{ico} ,
            </if>
            <if test="cpermission!=null and cpermission!=''">
                cpermission= #{cpermission} ,
            </if>
            <if test="curl!=null and curl!=''">
                curl = #{curl} ,
            </if>
            <if test="ctype!=null and ctype!=''">
                ctype = #{ctype} ,
            </if>
            <if test="state!=null and state!=''">
                state = #{state} ,
            </if>
            <if test="belong!=null and belong!=''">
                belong = #{belong} ,
            </if>
            <if test="cwhich!=null and cwhich!=''">
                cwhich = #{cwhich} ,
            </if>
            <if test="quoteNum!=null and quoteNum!=''">
                quote_num = #{quoteNum} ,
            </if>
            <if test="remark!=null and remark!=''">
                remark = #{remark} ,
            </if>
            <if test="orderNo!=null and orderNo!=''">
                order_no = #{orderNo} ,
            </if>
        </set>
        where module_id=#{id}
    </update>

    <select id="findModulesByRoleId" resultMap="BaseResultMap">
        select * from ss_module m inner join pe_role_module rm on m.module_id = rm.module_id
        where rm.role_id = #{roleId}
    </select>

    <delete id="deleteModulesByRoleId">
        delete from pe_role_module where role_id = #{roleId}
    </delete>
    
    <insert id="saveRoleModule">
        insert into pe_role_module (role_id, module_id) values (#{roleId}, #{moduleId})
    </insert>

    <select id="findByBelong" resultMap="BaseResultMap">
        select * from ss_module where belong = #{belong}
    </select>

    <select id="findByUserId" resultMap="BaseResultMap">
        select distinct m.* from ss_module m
            inner join pe_role_module rm on m.module_id = rm.module_id
            inner join pe_role r on rm.role_id = r.role_id
            inner join pe_role_user ru on r.role_id = ru.role_id
            where ru.user_id = #{userId}
    </select>
</mapper>